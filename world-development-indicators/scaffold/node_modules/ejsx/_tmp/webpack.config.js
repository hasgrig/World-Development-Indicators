
const path = require('path')
const webpack = require('webpack')

function EjsxPlugin (opts) {
}

EjsxPlugin.prototype.apply = function (compiler) {
  compiler.plugin("compile", function(params) {
    console.log("The compiler is starting to compile...")
  })

  compiler.plugin("compilation", function(compilation) {
    console.log("The compiler is starting a new compilation...")

    compilation.plugin("optimize", function() {
      console.log("The compilation is starting to optimize files...")
    })
  })

  compiler.plugin("emit", function(compilation, callback) {
    console.log("The compilation is going to emit files...")
    callback()
  })
}

module.exports = {
  entry: './docs/entry.js',

  output: {
    path: path.join(__dirname, 'docs'),
    filename: 'bundle.js'
  },

  module: {
    loaders: [
      {
        test: /\.js$/,
        exclude: /node_modules/,
        loader: 'babel'
      },
      {
        test: /\.ejsx$/,
        loader: 'babel!ejsx'
      }
    ]
  },

  resolveLoader: {
    alias: {
      'ejsx': path.join(__dirname, './ejsx-loader.js')
    }
  },

  plugins: [
    new webpack.ProvidePlugin({
      React: 'react'
    }),
    new EjsxPlugin({
      props: {
        title: 'Hello'
      }
    })
  ],

  devServer: {
    contentBase: 'docs/'
  }
}

